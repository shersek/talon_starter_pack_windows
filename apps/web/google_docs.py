import time
from talon.voice import Context, Key, press
from talon import ctrl
from ...utils import time_delay


def helper(app, win):
    # print(win.title.lower().find("google docs - google chrome")>0)
    return win.title.lower().find("google docs - google chrome") > 0


ctx = Context("google_docs", func=helper)

ctx.keymap(
    {
        # common actions
        # "copy": Key("ctrl-c"),
        # "cut": Key("ctrl-x"),
        # "paste": Key("ctrl-v"),
        "paste without formatting": Key("ctrl-shift-v"),
        "undo": Key("ctrl-z"),
        "redo": Key("ctrl-shift-z"),
        "(insert | edit) link": Key("ctrl-k"),
        # "open link": Key("alt-enter"),
        "[show] [common] keyboard shortcuts": Key("ctrl-/"),
        "save": Key("ctrl-s"),
        "print": Key("ctrl-p"),
        "open file": Key("ctrl-o"),
        # "find": Key("ctrl-f"),
        "find and replace": Key("ctrl-h"),
        "find again": Key("ctrl-g"),
        "find (previous | prev)": Key("ctrl-shift-g"),
        "hide [the] menus ": Key("ctrl-shift-f"),
        "[insert] page break": Key("ctrl-enter"),
        "(search [the] menus | command pallet)": Key("alt-/"),
        "repeat last [action]": Key("ctrl-y"),
        # text formatting
        "bold": Key("ctrl-b"),
        "(italic | italicize)": Key("ctrl-i"),
        "underline": Key("ctrl-u"),
        "strikethrough": Key("alt-shift-5"),
        "superscript": Key("ctrl-."),
        "subscript": Key("ctrl-,"),
        "copy [text] formatting": Key("ctrl-alt-c"),
        "paste [text] formatting": Key("ctrl-alt-v"),
        "(clear | remove) [text] formatting": Key("ctrl-space"),
        "increase font [size]": Key("ctrl-shift->"),
        "decrease font [size]": Key("ctrl-shift-<"),
        # paragraph formatting
        "increase [paragraph] indent": Key("ctrl-]"),
        "decrease [paragraph] indent": Key("ctrl-["),
        "[apply] normal (text | style)": Key("ctrl-alt-0"),
        "[apply] heading [style] 1": Key("ctrl-alt-1"),
        "[apply] heading [style] 2": Key("ctrl-alt-2"),
        "[apply] heading [style] 3": Key("ctrl-alt-3"),
        "[apply] heading [style] 4": Key("ctrl-alt-4"),
        "[apply] heading [style] 5": Key("ctrl-alt-5"),
        "[apply] heading [style] 6": Key("ctrl-alt-6"),
        "left align": Key("ctrl-shift-l"),
        "center align": Key("ctrl-shift-e"),
        "right align": Key("ctrl-shift-r"),
        "justify": Key("ctrl-shift-j"),
        "numbered list": Key("ctrl-shift-7"),
        "(bullet | bulleted) [list]": Key("ctrl-shift-8"),
        # images and drawings
        "resize larger": Key("ctrl-alt-k"),
        "resize larger horizontally": Key("ctrl-alt-b"),
        "resize larger vertically": Key("ctrl-alt-i"),
        "resize smaller": Key("ctrl-alt-j"),
        "resize smaller horizontally": Key("ctrl-alt-w"),
        "resize smaller vertically": Key("ctrl-alt-q"),
        "rotate clockwise [by] fifteen [degree]": Key("alt-right"),
        "rotate counterclockwise [by] fifteen [degree]": Key("alt-left"),
        "rotate counterclockwise [by] one [degree]": Key("alt-shift-left"),
        "rotate clockwise [by] one [degree]": Key("alt-shift-right"),
        "close drawing [editor]": Key("shift-esc"),
        # comments and footnotes
        "(insert | add) comment": Key("ctrl-alt-m"),
        "open discussion [thread]": Key("ctrl-alt-shift-a"),
        "enter [current] comment": Key("ctrl-enter"),
        "insert footnote": Key("ctrl-alt-f"),
        "move to current footnote": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("e"),
            press("f"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move to next footnote": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("n"),
            press("f"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move to (previous | prev) footnote": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("p"),
            press("f"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        # menus
        # "context menu": Key("ctrl-shift-\\"),
        "file menu": Key("alt-f"),
        "new (file | document | doc)": [
            Key("alt-f"),
            time_delay(0.1),
            Key("down"),
            time_delay(0.1),
            Key("down"),
            time_delay(0.1),
            Key("right"),
            time_delay(0.1),
            Key("enter"),
        ],
        "rename": [
            Key("alt-/"),
            time_delay(0.1),
            "rename",
            time_delay(0.1),
            Key("enter"),
        ],
        "edit menu": Key("alt-e"),
        "view menu": Key("alt-v"),
        "insert menu": Key("alt-i"),
        "format menu": Key("alt-o"),
        "tools menu": Key("alt-t"),
        # "table menu": Key("alt-b"),
        "help menu": Key("alt-h"),
        "accessibility menu": Key("alt-a"),
        "input tools menu": Key("ctrl-alt-shift-k"),
        # "toggle input controls": Key("ctrl-shift-k"),
        # text selection with keyboard
        "select all": Key("ctrl-a"),
        # "extend selection [one] character left": Key("shift-left"),
        # "extend selection [one] character right": Key("shift-right"),
        # "extend selection [one] line up": Key("shift-up"),
        # "extend selection [one] line down": Key("shift-down"),
        # "extend selection to the beginning of the line": Key("shift-home"),
        # "extend selection [one] paragraph up": Key("alt-shift-up"),
        # "extend selection [one] paragraph down": Key("alt-shift-down"),
        # "extend selection to the end of the line": Key("shift-end"),
        # "extend selection to the beginning of the document": Key("ctrl-shift-up"),
        # "extend selection to the end of the document": Key("ctrl-shift-down"),
        # screen reader support
        # "select current list item": lambda m: (
        #     ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
        #     press("e"),
        #     press("i"),
        #     ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        # ),
        # "select all list items at current level": lambda m: (
        #     ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
        #     press("e"),
        #     press("o"),
        #     ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        # ),
        # "enable screen reader supportlearn more about using google docs with a screen reader": Key(
        #     "alt-ctrl-z"
        # ),
        # "speak selection": Key("ctrl-alt-x"),
        # "speak from cursor location": Key("ctrl-alt-r"),
        # "announce cursor location": lambda m: (
        #     ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
        #     press("a"),
        #     press("l"),
        #     ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        # ),
        # "announce formatting at cursor location": lambda m: (
        #     ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
        #     press("a"),
        #     press("f"),
        #     ctrl.ke8y_press("ctrl", ctrl=True, alt=True, up=True),
        # ),
        # "speak the table column and row header": lambda m: (
        #     ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
        #     press("t"),
        #     press("h"),
        #     ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        # ),
        # "speak the table cell location": lambda m: (
        #     ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
        #     press("t"),
        #     press("n"),
        #     ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        # ),
        # "speak the table row header": lambda m: (
        #     ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
        #     press("t"),
        #     press("r"),
        #     ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        # ),
        # "speak the table column header": lambda m: (
        #     ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
        #     press("t"),
        #     press("c"),
        #     ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        # ),
        # document navigation
        "[move to] next heading": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("n"),
            press("h"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "[[move] to] (previous | prev) heading": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("p"),
            press("h"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "[[move] to] next heading 1": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("n"),
            press("1"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "[move to] next heading 2": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("n"),
            press("2"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "[move to] next heading 3": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("n"),
            press("3"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "[move to] next heading 4": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("n"),
            press("4"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "[move to] next heading 5": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("n"),
            press("5"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "[move to] next heading 6": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("n"),
            press("6"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "[move to] (previous | prev) heading 1": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("p"),
            press("1"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "[move to] (previous | prev) heading 2": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("p"),
            press("2"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "[move to] (previous | prev) heading 3": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("p"),
            press("3"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "[move to] (previous | prev) heading 4": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("p"),
            press("4"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "[move to] (previous | prev) heading 5": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("p"),
            press("5"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "[move to] (previous | prev) heading 6": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("p"),
            press("6"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move to next media": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("n"),
            press("g"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move to (previous | prev) media": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("p"),
            press("g"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move to next list": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("n"),
            press("o"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move to (previous | prev) list": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("p"),
            press("o"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move to next item in the current list": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("n"),
            press("i"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move to (previous | prev) item in the current list": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("p"),
            press("i"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move to next link": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("n"),
            press("l"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move to (previous | prev) link": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("p"),
            press("l"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move to next bookmark": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("n"),
            press("b"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move to (previous | prev) bookmark": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("p"),
            press("b"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "(move to | spring) (next | neck) (formatting | format) [change]": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("n"),
            press("w"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "(move to | spring) (previous | prev) (formatting | format) [change]": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("p"),
            press("w"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move to the next edit": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("n"),
            press("r"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move to the (previous | prev) edit": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("p"),
            press("r"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        # table navigation
        "move to the start of the table": lambda m: (
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
            press("t"),
            press("s"),
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        ),
        "move to the end of the table": lambda m: (
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
            press("t"),
            press("d"),
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        ),
        "move to the start of the table column": lambda m: (
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
            press("t"),
            press("i"),
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        ),
        "move to the end of the table column": lambda m: (
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
            press("t"),
            press("k"),
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        ),
        "move to the next table column": lambda m: (
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
            press("t"),
            press("b"),
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        ),
        "move to the (previous | prev) table column": lambda m: (
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
            press("t"),
            press("v"),
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        ),
        "move to the start of the table row": lambda m: (
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
            press("t"),
            press("j"),
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        ),
        "move to the end of the table row": lambda m: (
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
            press("t"),
            press("l"),
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        ),
        "move to the next table row": lambda m: (
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
            press("t"),
            press("m"),
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        ),
        "move to the (previous | prev) table row": lambda m: (
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
            press("t"),
            press("g"),
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        ),
        "exit table": lambda m: (
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
            press("t"),
            press("e"),
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        ),
        "move to the next table": lambda m: (
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
            press("n"),
            press("t"),
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        ),
        "move to the (previous | prev) table": lambda m: (
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, down=True),
            press("p"),
            press("t"),
            ctrl.key_press("shift", ctrl=True, alt=True, shift=True, up=True),
        ),
        # other tools and navigation
        "open revision history": Key("ctrl-alt-shift-h"),
        "open explore tool": Key("ctrl-alt-shift-i"),
        "open dictionary": Key("ctrl-shift-y"),
        "word count": Key("ctrl-shift-c"),
        "start voice typing": Key("ctrl-shift-s"),
        "page up": Key("pageup"),
        "page down": Key("pagedown"),
        "move to next misspelling": Key("ctrl-'"),
        "move to (previous | prev) misspelling": Key("ctrl-;"),
        "insert or move to header": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("o"),
            press("h"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "insert or move to footer": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("o"),
            press("f"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move focus to popup": lambda m: (
            ctrl.key_press("ctrl", ctrl=True, alt=True, down=True),
            press("e"),
            press("p"),
            ctrl.key_press("ctrl", ctrl=True, alt=True, up=True),
        ),
        "move focus out of document text": Key("ctrl-alt-shift-m"),
        "return focus to document text": Key("esc"),
        "focus containing webpage": Key("ctrl-shift-esc"),
        # "(show | view | toggle) outline [view]": [Key("ctrl-ctrl-a"), Key("ctrl-ctrl-h")],
        # "(search menus | command pallet)": Key('ctrl-/'),
    }
)
